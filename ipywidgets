{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "dfcfd44f",
   "metadata": {},
   "source": [
    "# A Jupyter-based Data Explorer using iPyWidgets\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "665269ba-ae74-44d5-abe6-d8d628586325",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import ipywidgets as widgets\n",
    "from ipywidgets import interact\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3c848561-d1d8-48bf-bb11-b2981c520c75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Birth Rate</th>\n",
       "      <th>Business Tax Rate</th>\n",
       "      <th>CO2 Emissions</th>\n",
       "      <th>Country</th>\n",
       "      <th>Days to Start Business</th>\n",
       "      <th>Ease of Business</th>\n",
       "      <th>Energy Usage</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Health Exp % GDP</th>\n",
       "      <th>Health Exp/Capita</th>\n",
       "      <th>...</th>\n",
       "      <th>Number of Records</th>\n",
       "      <th>Population 0-14</th>\n",
       "      <th>Population 15-64</th>\n",
       "      <th>Population 65+</th>\n",
       "      <th>Population Total</th>\n",
       "      <th>Population Urban</th>\n",
       "      <th>Region</th>\n",
       "      <th>Tourism Inbound</th>\n",
       "      <th>Tourism Outbound</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>87931.0</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26998.0</td>\n",
       "      <td>5.479006e+10</td>\n",
       "      <td>0.035</td>\n",
       "      <td>60.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.342</td>\n",
       "      <td>0.619</td>\n",
       "      <td>0.039</td>\n",
       "      <td>31719449</td>\n",
       "      <td>0.599</td>\n",
       "      <td>Africa</td>\n",
       "      <td>102000000.0</td>\n",
       "      <td>193000000.0</td>\n",
       "      <td>12/1/2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.050</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9542.0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7499.0</td>\n",
       "      <td>9.129595e+09</td>\n",
       "      <td>0.034</td>\n",
       "      <td>22.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.476</td>\n",
       "      <td>0.499</td>\n",
       "      <td>0.025</td>\n",
       "      <td>13924930</td>\n",
       "      <td>0.324</td>\n",
       "      <td>Africa</td>\n",
       "      <td>34000000.0</td>\n",
       "      <td>146000000.0</td>\n",
       "      <td>12/1/2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.043</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1617.0</td>\n",
       "      <td>Benin</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>2.359122e+09</td>\n",
       "      <td>0.043</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.454</td>\n",
       "      <td>0.517</td>\n",
       "      <td>0.029</td>\n",
       "      <td>6949366</td>\n",
       "      <td>0.383</td>\n",
       "      <td>Africa</td>\n",
       "      <td>77000000.0</td>\n",
       "      <td>50000000.0</td>\n",
       "      <td>12/1/2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.027</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4276.0</td>\n",
       "      <td>Botswana</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1836.0</td>\n",
       "      <td>5.788312e+09</td>\n",
       "      <td>0.047</td>\n",
       "      <td>152.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.383</td>\n",
       "      <td>0.587</td>\n",
       "      <td>0.029</td>\n",
       "      <td>1755375</td>\n",
       "      <td>0.532</td>\n",
       "      <td>Africa</td>\n",
       "      <td>227000000.0</td>\n",
       "      <td>209000000.0</td>\n",
       "      <td>12/1/2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.046</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1041.0</td>\n",
       "      <td>Burkina Faso</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.610959e+09</td>\n",
       "      <td>0.051</td>\n",
       "      <td>12.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.468</td>\n",
       "      <td>0.505</td>\n",
       "      <td>0.028</td>\n",
       "      <td>11607944</td>\n",
       "      <td>0.178</td>\n",
       "      <td>Africa</td>\n",
       "      <td>23000000.0</td>\n",
       "      <td>30000000.0</td>\n",
       "      <td>12/1/2000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Birth Rate  Business Tax Rate  CO2 Emissions       Country  \\\n",
       "0       0.020                NaN        87931.0       Algeria   \n",
       "1       0.050                NaN         9542.0        Angola   \n",
       "2       0.043                NaN         1617.0         Benin   \n",
       "3       0.027                NaN         4276.0      Botswana   \n",
       "4       0.046                NaN         1041.0  Burkina Faso   \n",
       "\n",
       "   Days to Start Business  Ease of Business  Energy Usage           GDP  \\\n",
       "0                     NaN               NaN       26998.0  5.479006e+10   \n",
       "1                     NaN               NaN        7499.0  9.129595e+09   \n",
       "2                     NaN               NaN        1983.0  2.359122e+09   \n",
       "3                     NaN               NaN        1836.0  5.788312e+09   \n",
       "4                     NaN               NaN           NaN  2.610959e+09   \n",
       "\n",
       "   Health Exp % GDP  Health Exp/Capita  ...  Number of Records  \\\n",
       "0             0.035               60.0  ...                  1   \n",
       "1             0.034               22.0  ...                  1   \n",
       "2             0.043               15.0  ...                  1   \n",
       "3             0.047              152.0  ...                  1   \n",
       "4             0.051               12.0  ...                  1   \n",
       "\n",
       "   Population 0-14  Population 15-64  Population 65+  Population Total  \\\n",
       "0            0.342             0.619           0.039          31719449   \n",
       "1            0.476             0.499           0.025          13924930   \n",
       "2            0.454             0.517           0.029           6949366   \n",
       "3            0.383             0.587           0.029           1755375   \n",
       "4            0.468             0.505           0.028          11607944   \n",
       "\n",
       "   Population Urban  Region  Tourism Inbound  Tourism Outbound       Year  \n",
       "0             0.599  Africa      102000000.0       193000000.0  12/1/2000  \n",
       "1             0.324  Africa       34000000.0       146000000.0  12/1/2000  \n",
       "2             0.383  Africa       77000000.0        50000000.0  12/1/2000  \n",
       "3             0.532  Africa      227000000.0       209000000.0  12/1/2000  \n",
       "4             0.178  Africa       23000000.0        30000000.0  12/1/2000  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load dataset\n",
    "df = pd.read_csv('World_Indicators.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fdba134d-75c0-404d-bbff-fdfd0ae77fad",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract year from 'Year' column\n",
    "df['Year'] = pd.to_datetime(df['Year']).dt.year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "122fc55c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012]\n"
     ]
    }
   ],
   "source": [
    "# Get year values\n",
    "year = df['Year'].unique()\n",
    "print(year)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ac03693e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Africa' 'Asia' 'Europe' 'Middle East' 'Oceania' 'The Americas']\n"
     ]
    }
   ],
   "source": [
    "# Get region values\n",
    "region = df['Region'].unique()\n",
    "print(region)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d00c4325-7725-4262-b464-a03ae270c57b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Birth Rate', 'Business Tax Rate', 'CO2 Emissions',\n",
       "       'Days to Start Business', 'Ease of Business', 'Energy Usage', 'GDP',\n",
       "       'Health Exp % GDP', 'Health Exp/Capita', 'Hours to do Tax',\n",
       "       'Infant Mortality Rate', 'Internet Usage', 'Lending Interest',\n",
       "       'Life Expectancy Female', 'Life Expectancy Male', 'Mobile Phone Usage',\n",
       "       'Number of Records', 'Population 0-14', 'Population 15-64',\n",
       "       'Population 65+', 'Population Total', 'Population Urban',\n",
       "       'Tourism Inbound', 'Tourism Outbound', 'Year'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.select_dtypes(include = 'number').columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8da871aa-e767-4a1f-8faf-73ad9d286187",
   "metadata": {},
   "outputs": [],
   "source": [
    "numeric_cols = ['Birth Rate', 'Business Tax Rate', 'CO2 Emissions',\n",
    "       'Days to Start Business', 'Ease of Business', 'Energy Usage', 'GDP',\n",
    "       'Health Exp % GDP', 'Health Exp/Capita', 'Hours to do Tax',\n",
    "       'Infant Mortality Rate', 'Internet Usage', 'Lending Interest',\n",
    "       'Life Expectancy Female', 'Life Expectancy Male', 'Mobile Phone Usage',\n",
    "       'Number of Records', 'Population 0-14', 'Population 15-64',\n",
    "       'Population 65+', 'Population Total', 'Population Urban',\n",
    "       'Tourism Inbound', 'Tourism Outbound','Year']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dfd978f8-484e-46ff-bfb1-a22a9c7b5516",
   "metadata": {},
   "outputs": [],
   "source": [
    "def scatter_plot_int(x='CO2 Emissions', y='Energy Usage', year_range=(min(year), max(year)), xlog=False, ylog=False, hue='Region'):\n",
    "    sns.set_style('whitegrid')\n",
    "    \n",
    "    # Filter dataset based on the year range\n",
    "    year_data = df[(df['Year'] >= year_range[0]) & (df['Year'] <= year_range[1])]\n",
    "    \n",
    "    ax = sns.scatterplot(data=year_data, x=x, y=y, alpha=0.6, hue=hue, palette='Set2')\n",
    "    \n",
    "    # Log scale for each axis\n",
    "    if xlog:\n",
    "        ax.set(xscale='log')\n",
    "    if ylog:\n",
    "        ax.set(yscale='log')\n",
    "    \n",
    "    ax.set_title('Internet Usage vs Mobile Phone Usage')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b9420ab3",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e74dc13bbfe64b9083c7c42d06499392",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(Dropdown(description='xcol:', options=('Birth Rate', 'Business Tax Rate', 'CO2 Emissionsâ€¦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<function __main__.scatter_plot_int(x='CO2 Emissions', y='Energy Usage', year_range=(2000, 2012), xlog=False, ylog=False, hue='Region')>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = widgets.Dropdown(\n",
    "    options=numeric_cols,\n",
    "    description='xcol:'\n",
    ")\n",
    "y = widgets.Dropdown(\n",
    "    options=numeric_cols,\n",
    "    description='ycol:'\n",
    ")\n",
    "year = widgets.IntRangeSlider(\n",
    "    value=(min(year), max(year)),\n",
    "    min=min(year),\n",
    "    max=max(year),\n",
    "    step=1,\n",
    "    description='year:'\n",
    ")\n",
    "xlog = widgets.Checkbox(\n",
    "    value=False,\n",
    "    description='xlog',\n",
    "    disabled=False\n",
    ")\n",
    "ylog = widgets.Checkbox(\n",
    "    value=False,\n",
    "    description='ylog',\n",
    "    disabled=False\n",
    ")\n",
    "hue = widgets.Dropdown(\n",
    "    options=region,\n",
    "    description='region',\n",
    ")\n",
    "\n",
    "interact(scatter_plot_int, x=x, y=y, year_range=year, xlog=xlog, ylog=ylog, hue='Region')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
